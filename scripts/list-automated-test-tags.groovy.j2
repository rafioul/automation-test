def getUserPassword = { username ->
    def creds = com.cloudbees.plugins.credentials.CredentialsProvider.lookupCredentials(
            com.cloudbees.plugins.credentials.common.StandardUsernamePasswordCredentials.class,
            jenkins.model.Jenkins.instance
            )

    def c = creds.findResult { it.username == username ? it : null }

    if ( c ) {
        return c.password
    } else {
        println "could not find credential for ${username}"
    }
}


def username = "{{ jenkins.credentials[0].username }}"
def password=getUserPassword("${username}")

def repo = "https://${username}:${password}@github.com/Postmedia-Digital/postmedia-automated-testing.git"


// Ask the Git repo to give up some metadata by pinging it with ls-remote commands.
// Then take the output and process it into list variables for return to the
// Extensible Choice plugin.

def gitTags = "git ls-remote --tags ${repo}"
def commitID = ~/^\w+\s+/                    // regexp to match commit ID and whitespace after it

def proc = gitTags.execute()
proc.waitFor()                               // Wait for the command to finish
def listTags = proc.in.text.tokenize("\n")   // *out* from the external program is *in* for groovy
listTags = listTags.reverse(mutate=false)    // List newest tags first and take the top 20
if (listTags.size() > 20) {
    listTags = listTags[0..19]
}
listTags = listTags.collect{it - commitID}   // Strip the commit ID from each string

def result = ["--choose one--"] + listTags

return result